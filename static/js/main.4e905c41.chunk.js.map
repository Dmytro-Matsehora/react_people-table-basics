{"version":3,"sources":["components/Loader/Loader.tsx","api.ts","components/PageNavLink.tsx","components/PeopleTable.tsx","components/LoadingError.tsx","App.tsx","index.tsx"],"names":["Loader","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PageNavLink","to","text","end","isActive","classNames","PageNavLink2","PersonLink","person","location","useLocation","pathname","slug","sex","name","born","died","mother","motherName","father","fatherName","PeopleTable","people","map","LoadingError","App","useState","setPeople","error","setError","uploadPeople","data","visiblePeople","find","role","path","element","replace","index","length","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.4e905c41.chunk.js","sourcesContent":["import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\nimport { FC } from 'react';\n\ntype Props = {\n  to: string;\n  text: string;\n};\n\nexport const PageNavLink: FC<Props> = ({ to, text }) => (\n  <NavLink\n    end\n    to={to}\n    className={({ isActive }) => classNames(\n      'navbar-item', { 'has-background-grey-lighter': isActive },\n    )}\n  >\n    {text}\n  </NavLink>\n);\n\nexport const PageNavLink2: FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames(\n      'navbar-item', { 'has-background-grey-lighter': isActive },\n    )}\n  >\n    {text}\n  </NavLink>\n);\n","import { FC } from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\n\ntype PropsLink = {\n  to: string;\n  person: Person;\n};\n\nexport const PersonLink: FC<PropsLink> = ({ to, person }) => {\n  const location = useLocation().pathname;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={(`/people/${person.slug}` === location && 'has-background-warning') || ''}\n    >\n      <td>\n        <NavLink\n          to={to}\n          className={classNames(\n            { 'has-text-danger': person.sex === 'f' },\n          )}\n        >\n          {person.name}\n        </NavLink>\n      </td>\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {person.mother\n          ? (\n            <NavLink\n              to={`/people/${person.mother.slug}`}\n              className={classNames(\n                { 'has-text-danger': person.mother.sex === 'f' },\n              )}\n            >\n              {person.mother.name}\n            </NavLink>\n          )\n          : person.motherName || '-'}\n      </td>\n      <td>\n        {person.father\n          ? (\n            <NavLink\n              to={`/people/${person.father.slug}`}\n            >\n              {person.father.name}\n            </NavLink>\n          )\n          : person.fatherName || '-'}\n      </td>\n    </tr>\n  );\n};\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: FC<Props> = ({ people }) => {\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        <table\n          data-cy=\"peopleTable\"\n          className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n        >\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Sex</th>\n              <th>Born</th>\n              <th>Died</th>\n              <th>Mother</th>\n              <th>Father</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {people.map(person => {\n              return (\n                <PersonLink\n                  to={`/people/${person.slug}`}\n                  person={person}\n                />\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n","export const LoadingError = () => (\n  <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n    Something went wrong\n  </p>\n);\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { useState } from 'react';\nimport { Loader } from './components/Loader';\nimport { getPeople } from './api';\nimport './App.scss';\nimport { Person } from './types/Person';\nimport { PageNavLink, PageNavLink2 } from './components/PageNavLink';\nimport { PeopleTable } from './components/PeopleTable';\nimport { LoadingError } from './components/LoadingError';\n\nexport const App = () => {\n  const [people, setPeople] = useState<Person[] | null>(null);\n  const [error, setError] = useState(false);\n\n  const uploadPeople = async () => {\n    try {\n      const data = await getPeople();\n\n      const visiblePeople = data.map(person => ({\n        ...person,\n        mother: data.find(\n          mother => mother.name === person.motherName,\n        ),\n        father: data.find(\n          father => father.name === person.fatherName,\n        ),\n      }));\n\n      setPeople(visiblePeople);\n    } catch (err) {\n      setError(true);\n    }\n  };\n\n  uploadPeople();\n\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <PageNavLink to=\"/\" text=\"Home\" />\n            <PageNavLink2 to=\"people\" text=\"People\" />\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <Routes>\n          <Route\n            path=\"/\"\n            element={<h1 className=\"title\">Home Page</h1>}\n          />\n\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"people\">\n            <Route\n              index\n              element={(\n                <div className=\"container\">\n                  <h1 className=\"title\">People Page</h1>\n                  {(!people && !error) && <Loader />}\n\n                  {error && <LoadingError /> }\n\n                  {(people && people.length < 1) && (\n                    <p data-cy=\"noPeopleMessage\">\n                      There are no people on the server\n                    </p>\n                  )}\n\n                  {people && <PeopleTable people={people} />}\n                </div>\n              )}\n            />\n\n            <Route\n              path=\":slug\"\n              element={(\n                <div className=\"container\">\n                  <h1 className=\"title\">People Page</h1>\n                  {(!people && !error) && <Loader />}\n\n                  {error && <LoadingError /> }\n\n                  {people && <PeopleTable people={people} />}\n                </div>\n              )}\n            />\n          </Route>\n\n          <Route\n            path=\"*\"\n            element={<h1 className=\"title\">Page not found</h1>}\n          />\n        </Routes>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}