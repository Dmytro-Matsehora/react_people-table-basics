{"version":3,"sources":["components/PageNavLink.tsx","components/Navigation.tsx","pages/HomePage.tsx","pages/NotFoundPage.tsx","api.ts","components/Loader/Loader.tsx","components/LoadingError.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","pages/PeoplePage.tsx","App.tsx","index.tsx"],"names":["PageNavLink","to","text","end","className","isActive","classNames","Navigation","role","HomePage","NotFoundPage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","LoadingError","NoPeopleMessage","PersonLink","person","location","useLocation","pathname","name","slug","sex","born","died","mother","father","motherName","fatherName","PeopleTable","people","map","PeoplePage","useState","setPeople","error","setError","uploadPeople","data","visiblePeople","find","length","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.9ff25603.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\nimport { FC } from 'react';\n\ntype Props = {\n  to: string;\n  text: string;\n  end: boolean;\n};\n\nexport const PageNavLink: FC<Props> = ({ to, text, end }) => (\n  <NavLink\n    end={end}\n    to={to}\n    className={({ isActive }) => classNames(\n      'navbar-item', { 'has-background-grey-lighter': isActive },\n    )}\n  >\n    {text}\n  </NavLink>\n);\n","import { PageNavLink } from './PageNavLink';\n\nexport const Navigation = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" end />\n        <PageNavLink to=\"people\" text=\"People\" end={false} />\n      </div>\n    </div>\n  </nav>\n);\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","export const LoadingError = () => (\n  <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n    Something went wrong\n  </p>\n);\n\nexport const NoPeopleMessage = () => (\n  <p data-cy=\"noPeopleMessage\">\n    There are no people on the server\n  </p>\n);\n","import { FC } from 'react';\nimport { Link, NavLink, useLocation } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types/Person';\n\ntype Props = {\n  to: string;\n  person: Person;\n};\n\nexport const PersonLink: FC<Props> = ({ to, person }) => {\n  const location = useLocation().pathname;\n  const {\n    name,\n    slug,\n    sex,\n    born,\n    died,\n    mother,\n    father,\n    motherName,\n    fatherName,\n  } = person;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={(`/people/${slug}` === location && 'has-background-warning') || ''}\n    >\n      <td>\n        <NavLink\n          to={to}\n          className={classNames(\n            { 'has-text-danger': sex === 'f' },\n          )}\n        >\n          {name}\n        </NavLink>\n      </td>\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother\n          ? (\n            <Link\n              to={`/people/${mother.slug}`}\n              className=\"has-text-danger\"\n            >\n              {mother.name}\n            </Link>\n          )\n          : motherName || '-'}\n      </td>\n      <td>\n        {father\n          ? (\n            <Link to={`/people/${father.slug}`}>\n              {father.name}\n            </Link>\n          )\n          : fatherName || '-'}\n      </td>\n    </tr>\n  );\n};\n","import { FC } from 'react';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: FC<Props> = ({ people }) => {\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        <table\n          data-cy=\"peopleTable\"\n          className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n        >\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Sex</th>\n              <th>Born</th>\n              <th>Died</th>\n              <th>Mother</th>\n              <th>Father</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {people.map(person => {\n              return (\n                <PersonLink\n                  to={`/people/${person.slug}`}\n                  person={person}\n                />\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { getPeople } from '../api';\nimport { Person } from '../types/Person';\nimport { Loader } from '../components/Loader';\nimport { LoadingError, NoPeopleMessage } from '../components/LoadingError';\nimport { PeopleTable } from '../components/PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[] | null>(null);\n  const [error, setError] = useState(false);\n\n  const uploadPeople = async () => {\n    try {\n      const data = await getPeople();\n\n      const visiblePeople = data.map(person => ({\n        ...person,\n        mother: data.find(\n          mother => mother.name === person.motherName,\n        ),\n        father: data.find(\n          father => father.name === person.fatherName,\n        ),\n      }));\n\n      setPeople(visiblePeople);\n    } catch (err) {\n      setError(true);\n    }\n  };\n\n  uploadPeople();\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      {(!people && !error) && <Loader />}\n\n      {error && <LoadingError /> }\n\n      {(people && people.length < 1) && <NoPeopleMessage /> }\n\n      {people && <PeopleTable people={people} />}\n    </>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { Navigation } from './components/Navigation';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { PeoplePage } from './pages/PeoplePage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navigation />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n            <Route path=\"people\">\n              <Route index element={<PeoplePage />} />\n              <Route path=\":slug\" element={<PeoplePage />} />\n            </Route>\n\n            <Route path=\"*\" element={<NotFoundPage />} />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}